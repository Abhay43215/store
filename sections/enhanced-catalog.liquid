<section class="enhanced-catalog" data-aos="fade-up">
  <div class="container">
    <div class="catalog-header">
      <h2 class="section-title">{{ section.settings.title | escape }}</h2>
      <p class="section-subtitle">{{ section.settings.subtitle | escape }}</p>
    </div>

    <div class="catalog-controls">
      <div class="catalog-filter">
        <button class="filter-toggle">
          <i class="fas fa-sliders-h"></i> Filter
        </button>
        <div class="filter-dropdown">
          <div class="filter-group">
            <h4>Categories</h4>
            <div class="filter-options">
              {% for collection in collections %}
                {% if collection.products_count > 0 %}
                  <label class="filter-option">
                    <input type="checkbox" data-filter="collection" data-value="{{ collection.handle }}">
                    <span class="checkmark"></span>
                    <span class="option-label">{{ collection.title }}</span>
                    <span class="option-count">{{ collection.products_count }}</span>
                  </label>
                {% endif %}
              {% endfor %}
            </div>
          </div>
          
          <div class="filter-group">
            <h4>Price Range</h4>
            <div class="price-slider">
              <div class="price-range">
                <input type="range" min="0" max="1000" value="0" class="price-min" id="price-min">
                <input type="range" min="0" max="1000" value="1000" class="price-max" id="price-max">
                <div class="slider-track"></div>
              </div>
              <div class="price-inputs">
                <div class="field">
                  <span>$</span>
                  <input type="number" class="input-min" value="0">
                </div>
                <div class="separator">-</div>
                <div class="field">
                  <span>$</span>
                  <input type="number" class="input-max" value="1000">
                </div>
              </div>
            </div>
          </div>
          
          <div class="filter-group">
            <h4>Rating</h4>
            <div class="filter-options">
              {% for i in (1..5) %}
                <label class="filter-option">
                  <input type="checkbox" data-filter="rating" data-value="{{ i }}">
                  <span class="checkmark"></span>
                  <span class="option-label">
                    {% for j in (1..5) %}
                      <i class="fas fa-star {% if j <= i %}filled{% else %}empty{% endif %}"></i>
                    {% endfor %}
                    {% if i == 1 %}& up{% endif %}
                  </span>
                </label>
              {% endfor %}
            </div>
          </div>
          
          <div class="filter-actions">
            <button class="btn-clear-filters">Clear All</button>
            <button class="btn-apply-filters">Apply Filters</button>
          </div>
        </div>
      </div>
      
      <div class="catalog-sort">
        <label for="sort-select">Sort by:</label>
        <select id="sort-select" class="sort-select">
          <option value="manual">Featured</option>
          <option value="price-ascending">Price: Low to High</option>
          <option value="price-descending">Price: High to Low</option>
          <option value="title-ascending">Alphabetically: A-Z</option>
          <option value="title-descending">Alphabetically: Z-A</option>
          <option value="created-descending">Date: New to Old</option>
          <option value="created-ascending">Date: Old to New</option>
          <option value="best-selling">Best Selling</option>
        </select>
      </div>
      
      <div class="catalog-view">
        <button class="view-btn grid-view active" data-view="grid">
          <i class="fas fa-th"></i>
        </button>
        <button class="view-btn list-view" data-view="list">
          <i class="fas fa-list"></i>
        </button>
      </div>
    </div>
    
    <div class="catalog-products grid-view-active">
      {% assign collection = collections[section.settings.collection] %}
      {% paginate collection.products by section.settings.products_per_page %}
        <div class="products-grid">
          {% for product in collection.products %}
            <div class="product-card" data-aos="fade-up" data-aos-delay="{{ forloop.index | times: 50 }}">
              <div class="product-badges">
                {% if product.compare_at_price > product.price %}
                  <span class="badge sale-badge">Sale</span>
                {% endif %}
                {% if product.tags contains 'new' %}
                  <span class="badge new-badge">New</span>
                {% endif %}
              </div>
              
              <div class="product-image">
                <a href="{{ product.url | within: collection }}">
                  <img 
                    src="{{ product.featured_image | img_url: '450x450', crop: 'center' }}" 
                    alt="{{ product.featured_image.alt | escape }}"
                    loading="lazy"
                    class="primary-image"
                  >
                  {% if product.images[1] %}
                    <img 
                      src="{{ product.images[1] | img_url: '450x450', crop: 'center' }}" 
                      alt="{{ product.images[1].alt | escape }}"
                      loading="lazy"
                      class="hover-image"
                    >
                  {% endif %}
                </a>
                
                <div class="product-actions">
                  <button class="action-btn quick-view-btn" data-product-id="{{ product.id }}">
                    <i class="fas fa-eye"></i>
                    <span class="tooltip">Quick View</span>
                  </button>
                  <button class="action-btn wishlist-btn">
                    <i class="far fa-heart"></i>
                    <span class="tooltip">Add to Wishlist</span>
                  </button>
                  <button class="action-btn compare-btn">
                    <i class="fas fa-exchange-alt"></i>
                    <span class="tooltip">Compare</span>
                  </button>
                </div>
              </div>
              
              <div class="product-info">
                <div class="product-category">
                  {{ product.type }}
                </div>
                <h3 class="product-title">
                  <a href="{{ product.url | within: collection }}">{{ product.title }}</a>
                </h3>
                <div class="product-rating">
                  <div class="stars">
                    {% assign rating = 4.5 %}
                    {% for i in (1..5) %}
                      {% if i <= rating %}
                        <i class="fas fa-star"></i>
                      {% elsif i <= rating and i > rating %}
                        <i class="fas fa-star-half-alt"></i>
                      {% else %}
                        <i class="far fa-star"></i>
                      {% endif %}
                    {% endfor %}
                  </div>
                  <span class="rating-count">({{ 10 | plus: product.id | modulo: 100 }})</span>
                </div>
                <div class="product-price">
                  {% if product.compare_at_price > product.price %}
                    <span class="compare-price">{{ product.compare_at_price | money }}</span>
                  {% endif %}
                  <span class="current-price">{{ product.price | money }}</span>
                </div>
                
                <div class="product-description">
                  {{ product.description | strip_html | truncatewords: 30 }}
                </div>
                
                <div class="product-buttons">
                  {% if product.available %}
                    <form method="post" action="/cart/add" class="add-to-cart-form">
                      <input type="hidden" name="id" value="{{ product.variants.first.id }}">
                      <input type="hidden" name="quantity" value="1">
                      <button type="submit" class="add-to-cart-btn">
                        <i class="fas fa-shopping-cart"></i> Add to Cart
                      </button>
                    </form>
                  {% else %}
                    <button class="out-of-stock-btn" disabled>
                      <i class="fas fa-times-circle"></i> Out of Stock
                    </button>
                  {% endif %}
                </div>
              </div>
            </div>
          {% else %}
            <div class="no-products">
              <div class="no-products-icon">
                <i class="fas fa-search"></i>
              </div>
              <h3>No products found</h3>
              <p>Try adjusting your filters or search criteria</p>
            </div>
          {% endfor %}
        </div>
        
        {% if paginate.pages > 1 %}
          <div class="pagination">
            {{ paginate | default_pagination }}
          </div>
        {% endif %}
      {% endpaginate %}
    </div>
  </div>
  
  <!-- Quick View Modal -->
  <div class="quick-view-modal" id="quickViewModal">
    <div class="modal-content">
      <button class="close-modal">
        <i class="fas fa-times"></i>
      </button>
      <div class="modal-body">
        <div class="product-quick-view">
          <!-- Content will be loaded via JS -->
          <div class="loading-spinner">
            <div class="spinner"></div>
          </div>
        </div>
      </div>
    </div>
  </div>
</section>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    // View switching (Grid/List)
    const viewButtons = document.querySelectorAll('.view-btn');
    const catalogProducts = document.querySelector('.catalog-products');
    
    viewButtons.forEach(button => {
      button.addEventListener('click', function() {
        const view = this.getAttribute('data-view');
        
        viewButtons.forEach(btn => btn.classList.remove('active'));
        this.classList.add('active');
        
        if (view === 'grid') {
          catalogProducts.classList.add('grid-view-active');
          catalogProducts.classList.remove('list-view-active');
        } else {
          catalogProducts.classList.add('list-view-active');
          catalogProducts.classList.remove('grid-view-active');
        }
      });
    });
    
    // Filter dropdown toggle
    const filterToggle = document.querySelector('.filter-toggle');
    const filterDropdown = document.querySelector('.filter-dropdown');
    
    if (filterToggle && filterDropdown) {
      filterToggle.addEventListener('click', function() {
        filterDropdown.classList.toggle('active');
      });
      
      // Close dropdown when clicking outside
      document.addEventListener('click', function(event) {
        if (!event.target.closest('.catalog-filter') && filterDropdown.classList.contains('active')) {
          filterDropdown.classList.remove('active');
        }
      });
    }
    
    // Price range slider
    const rangeInput = document.querySelectorAll(".price-range input");
    const priceInput = document.querySelectorAll(".price-inputs input");
    const range = document.querySelector(".slider-track");
    let priceGap = 100;
    
    if (rangeInput.length > 0) {
      priceInput.forEach(input => {
        input.addEventListener("input", e => {
          let minPrice = parseInt(priceInput[0].value);
          let maxPrice = parseInt(priceInput[1].value);
          
          if ((maxPrice - minPrice >= priceGap) && maxPrice <= rangeInput[1].max) {
            if (e.target.className === "input-min") {
              rangeInput[0].value = minPrice;
              range.style.left = ((minPrice / rangeInput[0].max) * 100) + "%";
            } else {
              rangeInput[1].value = maxPrice;
              range.style.right = 100 - (maxPrice / rangeInput[1].max) * 100 + "%";
            }
          }
        });
      });
      
      rangeInput.forEach(input => {
        input.addEventListener("input", e => {
          let minVal = parseInt(rangeInput[0].value);
          let maxVal = parseInt(rangeInput[1].value);
          
          if ((maxVal - minVal) < priceGap) {
            if (e.target.className === "price-min") {
              rangeInput[0].value = maxVal - priceGap;
            } else {
              rangeInput[1].value = minVal + priceGap;
            }
          } else {
            priceInput[0].value = minVal;
            priceInput[1].value = maxVal;
            range.style.left = ((minVal / rangeInput[0].max) * 100) + "%";
            range.style.right = 100 - (maxVal / rangeInput[1].max) * 100 + "%";
          }
        });
      });
    }
    
    // Quick View functionality
    const quickViewButtons = document.querySelectorAll('.quick-view-btn');
    const quickViewModal = document.getElementById('quickViewModal');
    const closeModal = document.querySelector('.close-modal');
    
    if (quickViewButtons.length > 0 && quickViewModal) {
      quickViewButtons.forEach(button => {
        button.addEventListener('click', function() {
          const productId = this.getAttribute('data-product-id');
          quickViewModal.classList.add('active');
          
          // Here you would typically load the product data via AJAX
          // For demo purposes, we'll just show a loading state
          setTimeout(() => {
            document.querySelector('.loading-spinner').style.display = 'none';
            // In a real implementation, you would populate this with product data
          }, 1000);
        });
      });
      
      if (closeModal) {
        closeModal.addEventListener('click', function() {
          quickViewModal.classList.remove('active');
          document.querySelector('.loading-spinner').style.display = 'block';
        });
      }
      
      // Close modal when clicking outside content
      quickViewModal.addEventListener('click', function(e) {
        if (e.target === quickViewModal) {
          quickViewModal.classList.remove('active');
          document.querySelector('.loading-spinner').style.display = 'block';
        }
      });
    }
  });
</script>

<style>
  .enhanced-catalog {
    padding: 4rem 0;
    background-color: var(--background-color);
  }
  
  .catalog-header {
    text-align: center;
    margin-bottom: 3rem;
  }
  
  .section-title {
    font-size: 2.5rem;
    margin-bottom: 1rem;
    background: linear-gradient(45deg, var(--primary-color), var(--accent-color));
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
  }
  
  .section-subtitle {
    font-size: 1.1rem;
    color: var(--text-color-light);
    max-width: 700px;
    margin: 0 auto;
  }
  
  .catalog-controls {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 2rem;
    flex-wrap: wrap;
    gap: 1rem;
  }
  
  /* Filter Styles */
  .catalog-filter {
    position: relative;
  }
  
  .filter-toggle {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    padding: 0.8rem 1.5rem;
    background-color: var(--card-background);
    border: 1px solid var(--border-color);
    border-radius: 8px;
    cursor: pointer;
    transition: all 0.3s ease;
  }
  
  .filter-toggle:hover {
    background-color: var(--primary-color);
    color: white;
  }
  
  .filter-dropdown {
    position: absolute;
    top: calc(100% + 10px);
    left: 0;
    width: 300px;
    background-color: var(--card-background);
    border-radius: 12px;
    box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
    padding: 1.5rem;
    z-index: 100;
    display: none;
  }
  
  .filter-dropdown.active {
    display: block;
    animation: fadeIn 0.3s ease;
  }
  
  @keyframes fadeIn {
    from { opacity: 0; transform: translateY(10px); }
    to { opacity: 1; transform: translateY(0); }
  }
  
  .filter-group {
    margin-bottom: 1.5rem;
  }
  
  .filter-group h4 {
    font-size: 1rem;
    margin-bottom: 1rem;
    padding-bottom: 0.5rem;
    border-bottom: 1px solid var(--border-color);
  }
  
  .filter-options {
    display: flex;
    flex-direction: column;
    gap: 0.8rem;
  }
  
  .filter-option {
    display: flex;
    align-items: center;
    cursor: pointer;
  }
  
  .filter-option input {
    position: absolute;
    opacity: 0;
    cursor: pointer;
    height: 0;
    width: 0;
  }
  
  .checkmark {
    position: relative;
    height: 18px;
    width: 18px;
    background-color: #eee;
    border-radius: 4px;
    margin-right: 10px;
  }
  
  .filter-option:hover input ~ .checkmark {
    background-color: #ccc;
  }
  
  .filter-option input:checked ~ .checkmark {
    background-color: var(--primary-color);
  }
  
  .checkmark:after {
    content: "";
    position: absolute;
    display: none;
  }
  
  .filter-option input:checked ~ .checkmark:after {
    display: block;
  }
  
  .filter-option .checkmark:after {
    left: 6px;
    top: 2px;
    width: 5px;
    height: 10px;
    border: solid white;
    border-width: 0 2px 2px 0;
    transform: rotate(45deg);
  }
  
  .option-label {
    flex: 1;
  }
  
  .option-count {
    color: var(--text-color-light);
    font-size: 0.9rem;
  }
  
  /* Price Range Slider */
  .price-slider {
    width: 100%;
    padding: 0.5rem 0;
  }
  
  .price-range {
    height: 5px;
    position: relative;
    background: #ddd;
    border-radius: 5px;
    margin-bottom: 1.5rem;
  }
  
  .price-range input {
    position: absolute;
    width: 100%;
    height: 5px;
    top: 0;
    background: none;
    pointer-events: none;
    -webkit-appearance: none;
    -moz-appearance: none;
  }
  
  .price-range input::-webkit-slider-thumb {
    height: 17px;
    width: 17px;
    border-radius: 50%;
    background: var(--primary-color);
    pointer-events: auto;
    -webkit-appearance: none;
    cursor: pointer;
  }
  
  .price-range input::-moz-range-thumb {
    height: 17px;
    width: 17px;
    border: none;
    border-radius: 50%;
    background: var(--primary-color);
    pointer-events: auto;
    -moz-appearance: none;
    cursor: pointer;
  }
  
  .slider-track {
    height: 100%;
    position: absolute;
    border-radius: 5px;
    background: var(--primary-color);
    left: 0%;
    right: 0%;
  }
  
  .price-inputs {
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 0.5rem;
  }
  
  .price-inputs .field {
    display: flex;
    align-items: center;
    height: 40px;
    width: 100px;
    background-color: #fff;
    border-radius: 5px;
  }
  
  .field span {
    width: 20px;
    text-align: center;
    color: #999;
  }
  
  .field input {
    width: 100%;
    height: 100%;
    outline: none;
    border: none;
    background: none;
    text-align: center;
    -moz-appearance: textfield;
  }
  
  .field input::-webkit-outer-spin-button,
  .field input::-webkit-inner-spin-button {
    -webkit-appearance: none;
  }
  
  .separator {
    width: 20px;
    text-align: center;
  }
  
  /* Rating Stars */
  .fa-star.filled {
    color: #ffc107;
  }
  
  .fa-star.empty {
    color: #e0e0e0;
  }
  
  /* Filter Actions */
  .filter-actions {
    display: flex;
    justify-content: space-between;
    margin-top: 1.5rem;
  }
  
  .btn-clear-filters,
  .btn-apply-filters {
    padding: 0.6rem 1rem;
    border-radius: 5px;
    cursor: pointer;
    font-weight: 500;
    transition: all 0.3s ease;
  }
  
  .btn-clear-filters {
    background-color: transparent;
    border: 1px solid var(--border-color);
    color: var(--text-color);
  }
  
  .btn-apply-filters {
    background-color: var(--primary-color);
    border: none;
    color: white;
  }
  
  .btn-clear-filters:hover {
    background-color: #f0f0f0;
  }
  
  .btn-apply-filters:hover {
    background-color: var(--accent-color);
  }
  
  /* Sort Dropdown */
  .catalog-sort {
    display: flex;
    align-items: center;
    gap: 0.5rem;
  }
  
  .sort-select {
    padding: 0.8rem;
    border: 1px solid var(--border-color);
    border-radius: 8px;
    background-color: var(--card-background);
    color: var(--text-color);
    cursor: pointer;
  }
  
  /* View Buttons */
  .catalog-view {
    display: flex;
    gap: 0.5rem;
  }
  
  .view-btn {
    width: 40px;
    height: 40px;
    display: flex;
    align-items: center;
    justify-content: center;
    background-color: var(--card-background);
    border: 1px solid var(--border-color);
    border-radius: 8px;
    cursor: pointer;
    transition: all 0.3s ease;
  }
  
  .view-btn.active {
    background-color: var(--primary-color);
    color: white;
    border-color: var(--primary-color);
  }
  
  /* Products Grid */
  .products-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));
    gap: 2rem;
  }
  
  .grid-view-active .products-grid {
    grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));
  }
  
  .list-view-active .products-grid {
    grid-template-columns: 1fr;
  }
  
  /* Product Card */
  .product-card {
    background-color: var(--card-background);
    border-radius: 12px;
    overflow: hidden;
    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.05);
    transition: transform 0.3s ease, box-shadow 0.3s ease;
    position: relative;
  }
  
  .grid-view-active .product-card {
    display: flex;
    flex-direction: column;
  }
  
  .list-view-active .product-card {
    display: grid;
    grid-template-columns: 300px 1fr;
  }
  
  .product-card:hover {
    transform: translateY(-5px);
    box-shadow: 0 15px 30px rgba(0, 0, 0, 0.1);
  }
  
  /* Product Badges */
  .product-badges {
    position: absolute;
    top: 1rem;
    left: 1rem;
    z-index: 2;
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
  }
  
  .badge {
    padding: 0.3rem 0.8rem;
    border-radius: 50px;
    font-size: 0.8rem;
    font-weight: 600;
  }
  
  .sale-badge {
    background-color: var(--accent-color);
    color: white;
  }
  
  .new-badge {
    background-color: var(--primary-color);
    color: white;
  }
  
  /* Product Image */
  .product-image {
    position: relative;
    overflow: hidden;
    height: 300px;
  }
  
  .list-view-active .product-image {
    height: 100%;
  }
  
  .product-image img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    transition: transform 0.5s ease;
  }
  
  .hover-image {
    position: absolute;
    top: 0;
    left: 0;
    opacity: 0;
    transition: opacity 0.5s ease;
  }
  
  .product-card:hover .primary-image {
    transform: scale(1.05);
  }
  
  .product-card:hover .hover-image {
    opacity: 1;
  }
  
  /* Product Actions */
  .product-actions {
    position: absolute;
    right: 1rem;
    top: 1rem;
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
    z-index: 2;
    opacity: 0;
    transform: translateX(20px);
    transition: all 0.3s ease;
  }
  
  .product-card:hover .product-actions {
    opacity: 1;
    transform: translateX(0);
  }
  
  .action-btn {
    width: 40px;
    height: 40px;
    border-radius: 50%;
    background-color: white;
    border: none;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    box-shadow: 0 3px 10px rgba(0, 0, 0, 0.1);
    transition: all 0.3s ease;
    position: relative;
  }
  
  .action-btn:hover {
    background-color: var(--primary-color);
    color: white;
    transform: translateY(-3px);
  }
  
  .tooltip {
    position: absolute;
    right: 45px;
    top: 50%;
    transform: translateY(-50%);
    background-color: var(--text-color);
    color: white;
    padding: 0.3rem 0.8rem;
    border-radius: 4px;
    font-size: 0.8rem;
    white-space: nowrap;
    opacity: 0;
    visibility: hidden;
    transition: all 0.3s ease;
  }
  
  .tooltip::after {
    content: '';
    position: absolute;
    top: 50%;
    right: -4px;
    transform: translateY(-50%) rotate(45deg);
    width: 8px;
    height: 8px;
    background-color: var(--text-color);
  }
  
  .action-btn:hover .tooltip {
    opacity: 1;
    visibility: visible;
    right: 50px;
  }
  
  /* Product Info */
  .product-info {
    padding: 1.5rem;
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
  }
  
  .product-category {
    font-size: 0.9rem;
    color: var(--text-color-light);
    text-transform: uppercase;
  }
  
  .product-title {
    font-size: 1.2rem;
    margin: 0.5rem 0;
  }
  
  .product-title a {
    color: var(--text-color);
    text-decoration: none;
    transition: color 0.3s ease;
  }
  
  .product-title a:hover {
    color: var(--primary-color);
  }
  
  .product-rating {
    display: flex;
    align-items: center;
    gap: 0.5rem;
  }
  
  .stars {
    display: flex;
    color: #ffc107;
  }
  
  .rating-count {
    font-size: 0.9rem;
    color: var(--text-color-light);
  }
  
  .product-price {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    margin: 0.5rem 0;
  }
  
  .compare-price {
    text-decoration: line-through;
    color: var(--text-color-light);
  }
  
  .current-price {
    font-size: 1.2rem;
    font-weight: 600;
    color: var(--primary-color);
  }
  
  .product-description {
    display: none;
    margin: 1rem 0;
    color: var(--text-color-light);
    line-height: 1.6;
  }
  
  .list-view-active .product-description {
    display: block;
  }
  
  .product-buttons {
    margin-top: 1rem;
  }
  
  .add-to-cart-btn,
  .out-of-stock-btn {